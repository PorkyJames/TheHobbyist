"""create_users_table

Revision ID: ffdc0a98111c
Revises:
Create Date: 2020-11-20 15:06:02.230689

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'ffdc0a98111c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create users table
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=25), nullable=False),
    sa.Column('last_name', sa.String(length=25), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )

    # Create profiles table
    op.create_table('profiles',
        sa.Column('id', sa.Integer(), nullable=False, primary_key=True),
        # sa.Column('name', sa.String(length=15), nullable=False),
        sa.Column('username', sa.String(length=15), nullable=False),
        sa.Column('bio', sa.String(length=50), nullable=True),
        sa.Column('mbti', sa.String(length=4), nullable=True),
        sa.Column('interests', sa.Text(), nullable=True),
        sa.Column('city', sa.String(length=50), nullable=True), 
        sa.Column('state', sa.String(length=50), nullable=True),  
        sa.Column('first_name', sa.String(length=50), nullable=True),  
        sa.Column('last_name', sa.String(length=50), nullable=True),  
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
        sa.UniqueConstraint('username')
    )

    # Create hobbies table
    op.create_table('hobbies',
        sa.Column('id', sa.Integer(), nullable=False, primary_key=True),
        sa.Column('profile_id', sa.Integer(), sa.ForeignKey('profiles.id', ondelete='CASCADE'), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('location', sa.String(), nullable=True),
        sa.Column('thoughts', sa.Text(), nullable=True),  
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id'), nullable=True),
    )

    # Create bookmarks table
    op.create_table('bookmarks',
        sa.Column('id', sa.Integer(), nullable=False, primary_key=True),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
        sa.Column('hobby_id', sa.Integer(), sa.ForeignKey('hobbies.id', ondelete='CASCADE'), nullable=False),
    )

    # Create reviews table
    op.create_table('reviews',
        sa.Column('id', sa.Integer(), nullable=False, primary_key=True),
        sa.Column('review_text', sa.Text(), nullable=True),
        sa.Column('star_rating', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
        sa.Column('hobby_id', sa.Integer(), sa.ForeignKey('hobbies.id', ondelete='CASCADE'), nullable=False),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE profiles SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE hobbies SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE bookmarks SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###qqqqqqqqq


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('profiles')
    op.drop_table('hobbies')
    op.drop_table('bookmarks')
    op.drop_table('reviews')

    # ### end Alembic commands ###
